/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import { MakeDirectoryOptions, PathLike, ReadStream, WriteStream } from 'fs';
import { StreamOptions, Stream } from 'stream';
export declare class NodeAsync {
    static readDirAsync(path: PathLike): Promise<string[]>;
    static existsAsync(path: PathLike): Promise<boolean>;
    static accessAsync(path: PathLike, mode?: number | undefined): Promise<void>;
    static mkdirAsync(path: PathLike, options: MakeDirectoryOptions & {
        recursive: true;
    }): Promise<string | undefined>;
    static unlinkAsync(path: PathLike): Promise<void>;
    static createWriteStreamAsync(path: PathLike, options?: globalThis.BufferEncoding | StreamOptions<Stream> | undefined): Promise<WriteStream>;
    static createReadStreamAsync(path: PathLike, options?: globalThis.BufferEncoding | StreamOptions<Stream>): Promise<ReadStream>;
    static resolveAsync(...pathSegments: string[]): Promise<string>;
}
