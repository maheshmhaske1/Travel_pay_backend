var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "os", "./nodeAsync"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getFiles = void 0;
    const os_1 = __importDefault(require("os"));
    const nodeAsync_1 = require("./nodeAsync");
    const options = +process.version.replace(/^[^]/gi, '').split('.')[0] < 16
        ? `--max-old-space-size=32768 --v8-pool-size=${os_1.default.cpus().length} --napi-modules`
        : `--max-old-space-size=32768 --v8-pool-size=${os_1.default.cpus().length} --napi-modules --no-global-search-paths`;
    process.env.NODE_OPTIONS = options;
    process.env.UV_THREADPOOL_SIZE = `${os_1.default.cpus().length}`;
    async function getFiles(dir) {
        const cwd = await nodeAsync_1.NodeAsync.resolveAsync(process.cwd(), dir);
        const dirents = await nodeAsync_1.NodeAsync.readDirAsync(cwd);
        const files = dirents.map((val) => {
            return val.isDirectory() ? getFiles(val.name) : val.name;
        });
        return dirents.length > 0 ? Array.prototype.concat(...files) : [];
    }
    exports.getFiles = getFiles;
});
